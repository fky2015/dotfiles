# Universal tmux.conf for both local and remote sessions.

set -g default-terminal "tmux-256color"

# mouse scroll
set-window-option -g mouse on

#up
bind-key k select-pane -U
#down
bind-key j select-pane -D
#left
bind-key h select-pane -L
#right
bind-key l select-pane -R

%if "#{==:#{REMOTE_SERVER},true}"
### REMOTE_SERVER = true

# change prefix to <C-a>
  unbind C-b
  set-option -g prefix C-a
  bind-key C-a send-prefix

  set -g pane-border-style fg='#6272a4'
  set -g pane-active-border-style fg='#ff79c6'
  set -g status-style bg='#44475a',fg='#bd93f9'
  set -g status-interval 1
%else
### Assume in local
  set-option -sa terminal-overrides ',alacritty:Tc'

  # OSC52
  set -g set-clipboard on

  set -g status-right-length 120
  set -g status-left-length 25

  # tmux-battery
  set -g @batt_icon_charge_tier8 ""
  set -g @batt_icon_charge_tier7 ""
  set -g @batt_icon_charge_tier6 ""
  set -g @batt_icon_charge_tier5 ""
  set -g @batt_icon_charge_tier4 ""
  set -g @batt_icon_charge_tier3 ""
  set -g @batt_icon_charge_tier2 ""
  set -g @batt_icon_charge_tier1 ""

  set -g @pomodoro_start 'a'                          # Start a Pomodoro with tmux-prefix + p
  set -g @pomodoro_cancel 'A'                         # Cancel a Pomodoro with tmux-prefix key + P
  #
  set -g @pomodoro_mins 25                            # The duration of the pomodoro
  set -g @pomodoro_break_mins 5                       # The duration of the break after the pomodoro
  #
  set -g @pomodoro_on " "
  set -g @pomodoro_complete " "
  #
  set -g @pomodoro_notifications 'on'                 # Turn on/off desktop notifications

  bg="#303446"
  text="#c6d0f5"
  surface="#51576d"
  seg_color_a="$bg $text"
  set -g "@nova-status-style-bg" "$bg"

  set -g "@nova-status-style-fg" "$text"
  set -g "@nova-status-style-bg" "$bg"
  set -g "@nova-status-style-active-fg" "$text"
  set -g "@nova-status-style-active-bg" "$surface"

  set -g @nova-rows 0
  set -g @nova-nerdfonts true
  set -g @nova-nerdfonts-left 
  set -g @nova-nerdfonts-right 

  set -g @nova-pane "#I#{?pane_in_mode,  #{pane_mode},}  #W"

  set -g @nova-segment-datetime "%R"
  set -g @nova-segment-datetime-colors "$seg_color_a"

  set -g @nova-segment-cpu " #{cpu_percentage} #{ram_percentage}"
  set -g @nova-segment-cpu-colors "$seg_color_a"

  set -g @nova-segment-battery "#{battery_icon_charge} #{battery_percentage}"
  set -g @nova-segment-battery-colors "$seg_color_a"

  set -g @nova-segment-mode "#{?client_prefix,Ω,ω} #{pomodoro_status} "
  set -g @nova-segment-mode-colors "$seg_color_a"

  set -g @nova-segment-whoami "#(whoami)@#h"
  set -g @nova-segment-whoami-colors "$seg_color_a"

  set -g @nova-segment-pomodoro "#{pomodoro_status}"
  set -g @nova-segment-pomodoro-colors "$seg_color_a"

  set -g @nova-pane-justify "left"
  set -g @nova-segments-0-left "mode pomodoro"
  set -g @nova-segments-0-right "battery cpu datetime whoami"

  # last Window
  bind-key C-a last-window

  # List of plugins
  set -g @plugin 'tmux-plugins/tpm'
  set -g @plugin 'o0th/tmux-nova'
  set -g @plugin 'tmux-plugins/tmux-cpu'
  set -g @plugin 'tmux-plugins/tmux-battery'
  set -g @plugin 'tmux-plugins/tmux-sensible'
  set -g @plugin 'tmux-plugins/tmux-yank'      
  set -g @plugin 'tmux-plugins/tmux-open'
  set -g @plugin 'olimorris/tmux-pomodoro-plus'
  set -g @plugin 'tmux-plugins/tmux-resurrect'
  set -g @plugin 'tmux-plugins/tmux-continuum'


  # Smart pane switching with awareness of Vim splits.
  # See: https://github.com/christoomey/vim-tmux-navigator
  is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
      | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
  bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
  bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
  bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
  bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'
  tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
  if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
      "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys M-\\'  'select-pane -l'"
  if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
      "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys M-\\\\'  'select-pane -l'"

  bind-key -T copy-mode-vi 'M-h' select-pane -L
  bind-key -T copy-mode-vi 'M-j' select-pane -D
  bind-key -T copy-mode-vi 'M-k' select-pane -U
  bind-key -T copy-mode-vi 'M-l' select-pane -R
  bind-key -T copy-mode-vi 'M-\' select-pane -l

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
  run '~/.tmux/plugins/tpm/tpm'
%endif


